<?xml version="1.0" encoding="UTF-8"?>
<language name="EasyCrypt"
          extensions="*.ec;*.eca"
          mimetype="text/x-easycrypt"
          section="Sources"
          version="1"
          kateversion="5.0"
          author="Pierre-Yves Strub (pierre-yves@strub.nu)" >
  <highlighting>
    <list name="dangerous">
      <item>admit</item>
      <item>admitted</item>
    </list>
    <list name="prog">
      <item>forall</item>
      <item>exists</item>
      <item>fun</item>
      <item>glob</item>
      <item>let</item>
      <item>in</item>
      <item>for</item>
      <item>var</item>
      <item>proc</item>
      <item>if</item>
      <item>is</item>
      <item>match</item>
      <item>then</item>
      <item>else</item>
      <item>elif</item>
      <item>match</item>
      <item>for</item>
      <item>while</item>
      <item>assert</item>
      <item>return</item>
      <item>res</item>
      <item>equiv</item>
      <item>hoare</item>
      <item>ehoare</item>
      <item>phoare</item>
      <item>islossless</item>
      <item>async</item>
    </list>
    <list name="tactical">
      <item>try</item>
      <item>first</item>
      <item>last</item>
      <item>do</item>
      <item>expect</item>
    </list>
    <list name="tactic">
      <item>beta</item>
      <item>iota</item>
      <item>zeta</item>
      <item>eta</item>
      <item>logic</item>
      <item>delta</item>
      <item>simplify</item>
      <item>cbv</item>
      <item>congr</item>
      <item>change</item>
      <item>split</item>
      <item>left</item>
      <item>right</item>
      <item>case</item>
      <item>pose</item>
      <item>gen</item>
      <item>have</item>
      <item>suff</item>
      <item>elim</item>
      <item>exlim</item>
      <item>ecall</item>
      <item>clear</item>
      <item>wlog</item>
      <item>apply</item>
      <item>rewrite</item>
      <item>rwnormal</item>
      <item>subst</item>
      <item>progress</item>
      <item>trivial</item>
      <item>auto</item>
      <item>idtac</item>
      <item>move</item>
      <item>modpath</item>
      <item>field</item>
      <item>fieldeq</item>
      <item>ring</item>
      <item>ringeq</item>
      <item>algebra</item>
      <item>replace</item>
      <item>transitivity</item>
      <item>symmetry</item>
      <item>seq</item>
      <item>wp</item>
      <item>sp</item>
      <item>sim</item>
      <item>skip</item>
      <item>call</item>
      <item>rcondt</item>
      <item>rcondf</item>
      <item>swap</item>
      <item>cfold</item>
      <item>rnd</item>
      <item>rndsem</item>
      <item>pr_bounded</item>
      <item>bypr</item>
      <item>byphoare</item>
      <item>byehoare</item>
      <item>byequiv</item>
      <item>byupto</item>
      <item>fel</item>
      <item>conseq</item>
      <item>exfalso</item>
      <item>inline</item>
      <item>outline</item>
      <item>interleave</item>
      <item>alias</item>
      <item>weakmem</item>
      <item>fission</item>
      <item>fusion</item>
      <item>unroll</item>
      <item>splitwhile</item>
      <item>kill</item>
      <item>eager</item>
    </list>
    <list name="bytac">
      <item>exact</item>
      <item>assumption</item>
      <item>smt</item>
      <item>by</item>
      <item>reflexivity</item>
      <item>done</item>
      <item>solve</item>
    </list>
    <list name="global">
      <item>axiom</item>
      <item>axiomatized</item>
      <item>lemma</item>
      <item>realize</item>
      <item>proof</item>
      <item>qed</item>
      <item>abort</item>
      <item>goal</item>
      <item>end</item>
      <item>from</item>
      <item>import</item>
      <item>export</item>
      <item>include</item>
      <item>local</item>
      <item>declare</item>
      <item>hint</item>
      <item>nosmt</item>
      <item>module</item>
      <item>of</item>
      <item>const</item>
      <item>op</item>
      <item>pred</item>
      <item>inductive</item>
      <item>notation</item>
      <item>abbrev</item>
      <item>require</item>
      <item>theory</item>
      <item>abstract</item>
      <item>section</item>
      <item>type</item>
      <item>class</item>
      <item>instance</item>
      <item>print</item>
      <item>search</item>
      <item>locate</item>
      <item>as</item>
      <item>Pr</item>
      <item>clone</item>
      <item>with</item>
      <item>rename</item>
      <item>prover</item>
      <item>timeout</item>
      <item>why3</item>
      <item>dump</item>
      <item>remove</item>
      <item>exit</item>
      <item>Top</item>
      <item>Self</item>
    </list>
    <list name="internal">
      <item>fail</item>
      <item>time</item>
      <item>undo</item>
      <item>debug</item>
      <item>pragma</item>
    </list>
    <contexts>
      <context attribute="Normal Text" lineEndContext="#pop" name="Normal Text" >
        <keyword attribute="Dangerous" context="#stay" String="dangerous" />
        <keyword attribute="Prog" context="#stay" String="prog" />
        <keyword attribute="Tactical" context="#stay" String="tactical" />
        <keyword attribute="Tactic" context="#stay" String="tactic" />
        <keyword attribute="ByTac" context="#stay" String="bytac" />
        <keyword attribute="Global" context="#stay" String="global" />
        <keyword attribute="Internal" context="#stay" String="internal" />
      </context>
    </contexts>
    <itemDatas>
      <itemData name="Normal Text" defStyleNum="dsNormal" />
      <itemData name="Dangerous" defStyleNum="dsError" />
      <itemData name="Prog" defStyleNum="dsFunction" />
      <itemData name="Tactical" defStyleNum="dsControlFlow" />
      <itemData name="Tactic" defStyleNum="dsFunction" />
      <itemData name="ByTac" defStyleNum="dsControlFlow" />
      <itemData name="Global" defStyleNum="dsKeyword" />
      <itemData name="Internal" defStyleNum="dsAttribute" />
      <itemData name="String" defStyleNum="dsString" />
    </itemDatas>
  </highlighting>
  <general>
    <keywords casesensitive="1"/>
    <folding indentationsensitive="0"/>
  </general>
</language>